{"remainingRequest":"/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/src/components/client/DragImageAvatar.vue?vue&type=style&index=0&id=4f45566c&scoped=true&lang=css&","dependencies":[{"path":"/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/src/components/client/DragImageAvatar.vue","mtime":1635297296000},{"path":"/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/node_modules/css-loader/dist/cjs.js","mtime":1635304629347},{"path":"/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635304630019},{"path":"/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/node_modules/cache-loader/dist/cjs.js","mtime":1635304628963},{"path":"/home/jonathan/Escritorio/Pruebas/Proyecto2.v/vue---front-master/node_modules/vue-loader/lib/index.js","mtime":1635304629775}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZHJvcHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsKICBib3JkZXI6MTBweCBzb2xpZCAjZWVlOwoKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CgogIHBhZGRpbmc6IDFyZW07CiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuMnMgZWFzZS1pbi1vdXQ7CgogIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwp9CgouaXNEcmFnZ2luZ3sKICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5OwogIGJvcmRlci1jb2xvcjogI2ZmZjsKfQoKaW1newogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICBvYmplY3QtZml0OiBjb250YWluOwp9CgojdXBsb2FkbXlmaWxlewogIGRpc3BsYXk6IG5vbmU7Cn0K"},{"version":3,"sources":["DragImageAvatar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"DragImageAvatar.vue","sourceRoot":"src/components/client","sourcesContent":["<template>\n  <v-card color=\"secondary\" class=\"pa-1\" height=\"300\" width=\"300\">\n    <div class=\"drop\" \n        :class=\"getClasses\" \n        @dragover.prevent=\"dragOver\" \n        @dragleave.prevent=\"dragLeave\"\n        @drop.prevent=\"drop($event)\"\n        style=\"position:relative\"\n    >\n        <img :src=\"imageSource\" v-if=\"imageSource\" />\n        \n        <label for=\"uploadmyfile\">\n            <h1 v-if=\"wrongFile\" class=\"primary--text text-center\" style=\"cursor:pointer\">Error en el formato de archivo</h1>\n            <v-icon v-if=\"!imageSource && !isDragging && !wrongFile\" size=\"200\" color=\"accent\" style=\"cursor:pointer\">{{icon}}</v-icon>\n        </label>\n        <input type=\"file\" id=\"uploadmyfile\" :accept=\"'image/*'\" multiple @change=\"requestUploadFile\">\n        <v-btn \n            color=\"secondary\" \n            fab dark absolute \n            right \n            top \n            x-small\n            @click=\"closeImg\"\n            v-if=\"imageSource\"\n        >\n            <v-icon>mdi-close</v-icon>\n        </v-btn>\n    </div>\n  </v-card>\n</template>\n\n\n<script>\n\nimport { mdiAccount } from '@mdi/js';\n\nexport default {\n    name: 'AImagePick',\n    data(){\n        return{\n            isDragging:false,\n            wrongFile:false,\n            imageSource:null,\n            icon:mdiAccount\n        }\n    },\n    computed:{\n        getClasses(){\n            return {isDragging: this.isDragging};\n        }\n    },\n    methods:{\n        dragOver(){\n            this.isDragging = true;\n        },\n        dragLeave(){\n            this.isDragging = false;\n        },\n        drop(e){\n            let files = e.dataTransfer.files;\n            this.wrongFile = false;\n            if (files.length === 1) {\n                let file = files[0];\n                if (file.type.indexOf('image/') >= 0) {\n\n                    var reader = new FileReader();\n                    reader.onload = f => {\n                        this.imageSource = f.target.result;\n                        this.$emit('drop-item',{image:file});\n                        this.isDragging = false;\n                    }\n                    reader.readAsDataURL(file);\n                }else{\n                    this.wrongFile = true;\n                    this.imageSource = null;\n                    this.isDragging = false;\n                }\n            }\n        },\n        onRequestUploadFiles(){\n        \n        },\n        requestUploadFile(){\n            var src = this.$el.querySelector('#uploadmyfile')\n            this.drop({dataTransfer:src})\n        },\n        closeImg(){\n            this.wrongFile = false;\n            this.imageSource = null;\n            this.isDragging = false;\n            this.$emit('drop-item',{image:null});\n        }\n    }\n}\n</script>\n\n\n<style scoped>\n.drop{\n  width: 100%;\n  height: 100%;\n  background-color: #eee;\n  border:10px solid #eee;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 1rem;\n  transition: background-color .2s ease-in-out;\n\n  font-family: sans-serif;\n}\n\n.isDragging{\n  background-color: #999;\n  border-color: #fff;\n}\n\nimg{\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\n#uploadmyfile{\n  display: none;\n}\n</style>"]}]}